using System;

namespace EstacionamientoUniversidad
{
    // Clase que representa un vehículo
    public class Vehiculo
    {
        public string Placa { get; set; }
        public string Marca { get; set; }
        public string Modelo { get; set; }
        public int Anio { get; set; }
        public decimal Precio { get; set; }
        public Vehiculo Siguiente { get; set; } // Referencia al siguiente vehículo en la lista

        public Vehiculo(string placa, string marca, string modelo, int anio, decimal precio)
        {
            Placa = placa;
            Marca = marca;
            Modelo = modelo;
            Anio = anio;
            Precio = precio;
            Siguiente = null;
        }
    }

    // Clase que maneja la lista enlazada de vehículos
    public class ListaVehiculos
    {
        private Vehiculo cabeza;

        public ListaVehiculos()
        {
            cabeza = null;
        }

        // a. Agregar vehículo
        public void AgregarVehiculo(string placa, string marca, string modelo, int anio, decimal precio)
        {
            Vehiculo nuevoVehiculo = new Vehiculo(placa, marca, modelo, anio, precio);
            if (cabeza == null)
            {
                cabeza = nuevoVehiculo;
            }
            else
            {
                Vehiculo actual = cabeza;
                while (actual.Siguiente != null)
                {
                    actual = actual.Siguiente;
                }
                actual.Siguiente = nuevoVehiculo;
            }
            Console.WriteLine("Vehículo agregado exitosamente.");
        }

        // b. Buscar vehículo por placa
        public void BuscarVehiculoPorPlaca(string placa)
        {
            Vehiculo actual = cabeza;
            while (actual != null)
            {
                if (actual.Placa.Equals(placa, StringComparison.OrdinalIgnoreCase))
                {
                    Console.WriteLine($"Placa: {actual.Placa}, Marca: {actual.Marca}, Modelo: {actual.Modelo}, Año: {actual.Anio}, Precio: {actual.Precio:C}");
                    return;
                }
                actual = actual.Siguiente;
            }
            Console.WriteLine("Vehículo no encontrado.");
        }

        // c. Ver vehículos por año
        public void VerVehiculosPorAnio(int anio)
        {
            Vehiculo actual = cabeza;
            bool encontrado = false;
            while (actual != null)
            {
                if (actual.Anio == anio)
                {
                    Console.WriteLine($"Placa: {actual.Placa}, Marca: {actual.Marca}, Modelo: {actual.Modelo}, Año: {actual.Anio}, Precio: {actual.Precio:C}");
                    encontrado = true;
                }
                actual = actual.Siguiente;
            }
            if (!encontrado)
            {
                Console.WriteLine("No se encontraron vehículos del año especificado.");
            }
        }

        // d. Ver todos los vehículos registrados
        public void VerTodosLosVehiculos()
        {
            Vehiculo actual = cabeza;
            if (actual == null)
            {
                Console.WriteLine("No hay vehículos registrados.");
                return;
            }

            while (actual != null)
            {
                Console.WriteLine($"Placa: {actual.Placa}, Marca: {actual.Marca}, Modelo: {actual.Modelo}, Año: {actual.Anio}, Precio: {actual.Precio:C}");
                actual = actual.Siguiente;
            }
        }

        // e. Eliminar carro registrado
        public void EliminarVehiculo(string placa)
        {
            if (cabeza == null)
            {
                Console.WriteLine("No hay vehículos registrados.");
                return;
            }

            if (cabeza.Placa.Equals(placa, StringComparison.OrdinalIgnoreCase))
            {
                cabeza = cabeza.Siguiente;
                Console.WriteLine("Vehículo eliminado exitosamente.");
                return;
            }

            Vehiculo actual = cabeza;
            while (actual.Siguiente != null && !actual.Siguiente.Placa.Equals(placa, StringComparison.OrdinalIgnoreCase))
            {
                actual = actual.Siguiente;
            }

            if (actual.Siguiente == null)
            {
                Console.WriteLine("Vehículo no encontrado.");
            }
            else
            {
                actual.Siguiente = actual.Siguiente.Siguiente;
                Console.WriteLine("Vehículo eliminado exitosamente.");
            }
        }
    }

    class Program
    {
        static void Main(string[] args)
        {
            ListaVehiculos listaVehiculos = new ListaVehiculos();
            int opcion;

            do
            {
                Console.WriteLine("\n=== Menú de opciones ===");
                Console.WriteLine("1. Agregar vehículo");
                Console.WriteLine("2. Buscar vehículo por placa");
                Console.WriteLine("3. Ver vehículos por año");
                Console.WriteLine("4. Ver todos los vehículos registrados");
                Console.WriteLine("5. Eliminar vehículo");
                Console.WriteLine("6. Salir");
                Console.Write("Seleccione una opción: ");

                if (!int.TryParse(Console.ReadLine(), out opcion))
                {
                    Console.WriteLine("Opción inválida. Intente de nuevo.");
                    continue;
                }

                switch (opcion)
                {
                    case 1:
                        Console.Write("Ingrese la placa del vehículo: ");
                        string placa = Console.ReadLine();
                        Console.Write("Ingrese la marca del vehículo: ");
                        string marca = Console.ReadLine();
                        Console.Write("Ingrese el modelo del vehículo: ");
                        string modelo = Console.ReadLine();
                        Console.Write("Ingrese el año del vehículo: ");
                        int anio = int.Parse(Console.ReadLine());
                        Console.Write("Ingrese el precio del vehículo: ");
                        decimal precio = decimal.Parse(Console.ReadLine());
                        listaVehiculos.AgregarVehiculo(placa, marca, modelo, anio, precio);
                        break;
                    case 2:
                        Console.Write("Ingrese la placa del vehículo a buscar: ");
                        string placaBuscar = Console.ReadLine();
                        listaVehiculos.BuscarVehiculoPorPlaca(placaBuscar);
                        break;
                    case 3:
                        Console.Write("Ingrese el año de los vehículos a listar: ");
                        int anioBuscar = int.Parse(Console.ReadLine());
                        listaVehiculos.VerVehiculosPorAnio(anioBuscar);
                        break;
                    case 4:
                        listaVehiculos.VerTodosLosVehiculos();
                        break;
                    case 5:
                        Console.Write("Ingrese la placa del vehículo a eliminar: ");
                        string placaEliminar = Console.ReadLine();
                        listaVehiculos.EliminarVehiculo(placaEliminar);
                        break;
                    case 6:
                        Console.WriteLine("Saliendo del programa...");
                        break;
                    default:
                        Console.WriteLine("Opción inválida. Intente de nuevo.");
                        break;
                }

            } while (opcion != 6);
        }
    }
}
